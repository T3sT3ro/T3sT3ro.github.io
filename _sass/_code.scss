// Code and monospace elements

pre, code, samp, var {
    @include text-code-intellij;
}

pre code.hljs { 
    padding: 1rem; 
}

.line-wrap {
    white-space: pre-wrap;
    .hljs-ln-numbers {
        vertical-align: baseline;
    }
}

pre:not(:has(.hljs)) { // fallback when hljs is not loaded
    code {
        display: block;
        padding: 1rem;
    }
    overflow: auto;
    background-color: #2b2b2b;
}

.code-wrapper {
    margin: 1em 0;
    display: flex;
    flex-direction: column;
    align-items: center;

    pre {
        margin: 0;
        min-height: 3.5em;

        min-width: 100%;
        width: 100%;
        max-width: 95vw;
        
        resize: both;
        overflow-x: auto;
        overflow-y: clip;
        
        display: flex;
        flex-direction: column;

        code {
            height: 100%;
        }

        &.fit-code {
            width: min-content;
            height: min-content;
        }
    }
}

.hljs-ln-numbers {
    display: none;
}

.lines {
    
    .hljs-ln {
        margin-left: -0.7em;
    }

    .hljs-ln-numbers {
        display: table-cell;
        min-width: calc(3ch + .3em);
        padding-right: .3em !important;
        border-right-style: solid;
        border-right-width: 1px;
    
        text-align: right;
        color: var(--th-code-line-highlight);
    }

    .hljs-ln-numbers + .hljs-ln-code {
        padding-left: .5em !important;
    }
}

// coloring lines
.hljs .highlight {
    .hljs-ln-numbers {    
        box-shadow: 5px 0px;
        color: var(--th-S-light);
    }
    .hljs-ln-code {
        background-color: var(--th-code-line-highlight);
    }
}
.hljs .highlight.start .hljs-ln-code { 
    border-top: 1px solid;    
}
.hljs .highlight.end .hljs-ln-code   { 
    border-bottom: 1px solid; 
}

pre {
    position: relative;

    // header for .filename
    &[filename]:before {
        content: attr(filename);
        background-color: var(--th-P-dark);
        display: block;
        color: var(--th-on-P);
        padding-left: 0.5em;
    }
    
    // &:after {
    //     content: "[F] - fit width to window \A
    //               [R] - reset to initial size \A
    //               [L] - toggle lines";
    //     display: block;
    //     width: min-content;
        
    //     position: absolute;
    //     top: 0;
    //     right: 0;

    //     color: transparent;
    //     // background-color: transparent;
    //     // padding: .5em;
    //     // border-radius: 2px;
        
    //     transition: all 1s ease-out .5s;
    //     transform: translateX(calc(100% + 1.5em));
    // }
    
    // &:hover:after {
    //     color: var(--th-on-surface);
    //     // background-color: var(--th-S-dark);
    // }
}

:not(pre) > code, kbd, var, samp, pre:has(code) {
    // box-shadow: 0 0 2px var(--th-P-normal);
    border: 1px solid var(--th-P-border);
    border-radius: 3px;
}

:not(pre) > code, kbd { // inline code and kbd
    padding: 0px 4px;
    margin: 4px;
    color: var(--th-code-inline-fg);
    background-color: var(--th-code-inline-bg);
    white-space: nowrap;
    
    @media (max-width: 400) {
        white-space: pre-wrap;
    }
}

#shortcuts {
    display: block;
    
    position: fixed;
    bottom: 0;
    right: 0;

    
    span {
        position: absolute;
        bottom: 0;
        right: 0;
        
        min-width: 50px;
        min-height: 50px;
        
        text-align: center;
        font-size: 25pt;
    }
    
    pre {
        display: none;
        text-align: left;
        font-size: 1rem;
        padding: 1em;
        margin: 0;
        white-space: pre-line;
        background-color: var(--th-S-dark);
        border: 1px solid var(--th-S-normal);
    }

    &:hover {
        span {
            display: none;
        }
        pre {
            display: block;
        }
    }
}
